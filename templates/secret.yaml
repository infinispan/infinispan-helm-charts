{{- if not .Values.deploy.security.secretName }}
  {{- $secretName := (include "infinispan-helm-charts.secret" .) }}
  {{- $password := randAlphaNum 8 }}
  {{- if .Release.IsUpgrade }}
    {{- with lookup "v1" "Secret" .Release.Namespace $secretName }}
      {{- if and .data (hasKey .data "password") }}
        {{- $password = .data.password | b64dec }}
      {{- end }}
    {{- end }}
  {{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    app: infinispan-secret-identities
  {{- include "infinispan-helm-charts.labels" . | nindent 4 }}
  annotations:
  {{- include "infinispan-helm-charts.annotations" . | nindent 4 }}
    "helm.sh/resource-policy": keep
type: Opaque
stringData:
  username: monitor
  password: {{ $password }}
  {{- if .Values.deploy.security.batch }}
  identities-batch: |-
    {{- .Values.deploy.security.batch | trim | nindent 4 }}
    {{- if not ( print "\n" .Values.deploy.security.batch | trim | regexMatch "\nuser create") }}
    user create developer -p {{ $password }} -g admin
    {{- end }}
    user create monitor -p {{ $password }} --users-file metrics-users.properties --groups-file metrics-groups.properties
  {{- else }}
  identities-batch: |-
    user create developer -p {{ $password }} -g admin
    user create monitor -p {{ $password }} --users-file metrics-users.properties --groups-file metrics-groups.properties
  {{- end }}
{{- end }}